plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //kotlin依赖--start
    api "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
    api "androidx.core:core-ktx:$KTX_CORE_VERSION"
    //kotlin依赖--end

    //jitpack--start
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    //jitpack--end

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //网络请求依赖--start
    api("com.squareup.retrofit2:retrofit:$RETROFIT2_VERSION") {
        exclude group: "com.squareup.okhttp3"
        exclude module: "okhttp"
    }
    api("com.squareup.retrofit2:converter-gson:$RETROFIT2_VERSION") {
        exclude module: "retrofit"
        exclude module: "gson"
        exclude module: "okhttp"
        exclude group: "com.squareup.okhttp3"
    }
    api "com.google.code.gson:gson:$GSON_VERSION"
    api("com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION") {
        exclude module: 'okhttp'
    }
    api "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    //网络请求依赖--end
}